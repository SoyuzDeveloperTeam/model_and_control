#ifndef A16_HDR
#define A16_HDR
#include <vcl.h>

static bool arg_work_pr; // Признак работы Аргона
static bool sp_d_k;      // Тип самопроверки (1 - длинная, 0 - короткая)
static int tResult;

static double ArgonMemoryType[4096];

static struct {
byte mode;
int addr;
int value;
char z;
} irvi_type;

static struct {
double b1b2;  // Б1 + Б2
double k1k2;  // К1 + К2
double halfk; // Половина К
double verch; // Верхняя граница ЗУ
double sred;  // Средняя граница ЗУ
double niz;   // Нижняя граница ЗУ
} dopusk_zu;  // Допуска на скорость сближения (динамические)

static struct {
double Ex; //  Ускорение в продольном канале x
double Ey; //  Ускорение в боковом по тангажу y
double Ez; //  Ускорение в боковом по рысканию z

double ax; // Ускорение в продольном канале x
double ay; // Ускорение в боковом по тангажу y
double az; // Ускорение в боковом по рысканию z

double axd;
double axruo;

double rs;   // Дальность радиальная
double sks;  // Скорость радиальная

double V;
double vb;
double vby, vbz;
double om;

double omyx; // Угловая скорость ЛВ по горизонтали (ось ОУ) Ex
double omzx; // Угловая скорость по тангажу (Ось OZ) Ez
double omx;  // Угловая скорость вращения вокруг оси ОХ
double omy;  // Угловая скорость ЛВ по горизонтали (ось ОУ)
double omz;  // Угловая скорость по тангажу (ось OZ)
double omyf; //
double omzf; //
double uomx; //
double uomy; //
double uomz; //

double ypr;  // Промах Sy
double zpr;  // Промах Sz
double Spr;  // Промах S

double vbok;   //

double rasp;   //
double rudkg;  // Топливо от РУД
double ruokgx; // ROU x
double ruokgy; // ROU y
double ruokgz; // ROU z

double kvkg;   //

double ax1;
double Y2;
}dynamics;

static bool argon_auto_contr; // Признак автоматического управления ТПК.
static bool dock_fbvs;        // Признак стыковки от СУБК
static bool can_send_toirvi;  // Флаг разрешения вывода на ИрВИ

static struct{
byte str_1;
byte str_2;
byte str_3;
byte str_4;
}bfi_strings;

static int i_tok;

static struct{
bool dpo_x;
}dpo_bit;

static bool dpo_status_bit;

static byte ht = 1;

static int i, j, K, k, t;  // Такты БЦВК
static long i_ot_pusk;  // Такты БЦКВ от Пуска
static double dt;       // Delta t

static int GSO_types;
static double deltavt_1, deltavt_2;

//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\
// Отладочные - неиспользовать в симуляторе!
static int a_debugger; // Отладочная по основным программам и циклам.
static int i_012;
//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\//\\\

static AnsiString irvi_string = "              ";
static AnsiString irvi_string_i[4];
static bool irvi_err;

static TDateTime gc1_time;

static double v_tek_m;

/////////////////////////////////////
// Параболы для ручного управления //
//    сближением ТПК с МКС         //
/////////////////////////////////////
static double r_m[32];
static double v_b1b2[32];
static double v_k1k2[32];
static double v_half_k1k2[32];
static double v_verch[32];
static double v_sred[32];
static double v_niz[32];

/////////////////////////////
// Константы ускорений ДПО //
// в разных конфигурациях  //
/////////////////////////////
static const double ax_b1b2 = 0.07396;  //В методике 0.0778 это с БО, а без 0,093
static const double ax_k1k2 = 0.03698;
static const double ax_half = 0.01849;
static const double ax_verh = 0.00711;
static const double ax_sred = 0.00396;
static const double ax_nijn = 0.00254;

#endif //A16_HDR

/*

*********************
* П Р О Г Р А М М Ы *
*  А Р Г О Н - 1 6  *
*********************

ПУПС - программа управления подпрограммами сближения (диспетчер сближения):
- устанавливает начальные условия для режима СБ;
- устанавливает и снимает заявки на программы сближения (КУРС, ПРОК, ПРУС, ОПУС, РЕКС);
- организует работу программ СБ в соответствии с алгоритмами дальнего, ближнего участков, перестыковки;
- организует логику работы СУД при прохождении команд ССВП;
- задает режим ориентации ТК в ЛСК.

КУРС - программа управления аппаратурой КУРС:
- включает и выключает аппаратуру КУРС;
- выдает команды в аппаратуру КУРС на проведение тестов и контролирует ход их проведения.
  Осуществляет анализ прошедших отказов комплектов ртс КУРС и на основе управляющей информации либо выключает КУРС,
  либо выбирает тот ком-плект, отказы которого в меньшей степени влияют на режим сближения;
- организует логику работы ртс КУРС в соответствии с управляющей информацией;
- устанавливает достоверности измерений параметров относительного движения.

ПРОК - программа автоматического контроля процесса СБ:
- контролирует прохождение режима сближения и работу аппаратуры КУРС;
- на основании анализа достоверностей определяет достаточность параметров для ориентации в ЛСК и коррекции прогноза,
  устанавливает разрешение использования этой информации. Контролирует работу фильтра.

ФИНТ - программа фильтрации и интегрирования:
- интегрирует уравнения движения ТК и ОК с учетом возмущающих факторов, в том числе с учетом работы КДУ ТК;
- вычисляет параметры относительного движения в ОСК и ЛСК;
- при работе КУРС и разрешающем ключе, устанавливаемым программой ПРОК, под-ключает динамический фильтр,
  который корректирует текущий вектор состояния ТК по измеренным параметрам относительного движения.

ПРУС - программам расчета уставок стрельбы:
- на разных этапах сближения подключаются соответствующие программы (ДУ, БУ, УВОД),которые непрерывно рассчитывают
  вектора потребных импульсов для кор-рекции движения центра масс ТК. В оптимальное, с точки зрения качества процесса,
  время выдается запрос (требование) на реализацию расчетного потребного импульса в проекциях на оси ОСК или ЛСК.
  Потребный импульс постоянно пересчитывается при работе СКД;
- программа УВОД, как составная часть программы ПРУС, рассчитывает импульсы, обеспечивающие безопасность полета с
  точки зрения возможного столкновения при прекращении процесса сближения.

ОПУС - программа определения уставок стрельбы:
- непрерывно перепроектирует на связанные оси ТК вектор потребного импульса, рассчитанного ПРУС в проекциях на оси ОСК или ЛСК;
- вычисляет  р - кватернион программного разворота ТК относительно ОСК или ЛСК для отработки корректирующего импульса на СКД.

ПОС - программа ориентации и стабилизации:
- в зависимости от заданного режима ориентации (ОСК или ЛСК) обеспечивает по-строение и поддержание этой ориентации ТК
  с определенной точностью.

КОНТРОЛЬ ПОС - контролирует работу датчиков и исполнительных органов при 
         построении и поддержании заданной ориентации;
- контролирует поддержание заданной ориентации ТК,

РЕКС - программа реализации коррекции сближения:
- выбирает исполнительные органы для ориентации ТК и для проведения коррекции центра масс;
- включает временной цикл работы СКД;
- реализует логику временного цикла работы СКД в автоматическом и полуавтоматическом режимах СБ.

ПРОГРАММА ВРЕМЕННЫХ ЦИКЛОВ СКД:
- организует временной цикл при коррекции на СКД;

ВЛУР - программа вычислений линейных ускорений:
- на основании информации с акселерометра, времени работы ДПО и характеристиках ДПО ВЛУР вычисляет проекции возмущений от
  работы исполнительных органов на связанные оси ТК.

ПРОГРАММА БРВИ:
- отображает на ИРВИ информацию по контролю состояния СУД;
- позволяет контролировать состояние ячеек ОЗУ БЦВК и вызывать форматы дисплея.

ПРОГРАММА ВКУ:
- обеспечивает выдачу на экран дисплея информации о прохождении режима в виде форматов.

ПРОГРАММА ТЕЛЕМЕТРИИ:
- выдает из БЦВК командную и непрерывную телеметрическую информацию о прохождении режимов.







*/
